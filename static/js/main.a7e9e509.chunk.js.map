{"version":3,"sources":["components/LessonCard.js","utils/backgroundColors.js","components/SwipeableModules.js","services/modulesService.js","pages/Home.js","services/lessonService.js","components/QuestionCard.js","components/SwipeableQuestions.js","pages/Lesson.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","card","maxHeight","rightIcon","marginLeft","spacing","description","height","star","color","LessonCard","props","classes","react_default","a","createElement","Card","className","CardActionArea","CardContent","Grid","container","direction","justify","alignItems","item","Typography","component","variant","lesson","title","stars","starsEarned","jsx","arguments","length","undefined","push","Star","key","CardActions","Button","size","aria-label","Link","to","concat","moduleId","lessonId","PlayCircleFilledWhite","colors","minHeight","paddingBottom","mobileStepperRoot","justifyContent","background","padding","SwipeableModules","_ref","modules","maxSteps","_useState","useState","_useState2","Object","slicedToArray","activeStep","setActiveStep","lib_default","index","onChangeIndex","step","enableMouseEvents","map","module","square","style","xs","align","lessons","md","sm","components_LessonCard","MobileStepper","root","steps","nextButton","Fab","onClick","prevActiveStep","disabled","KeyboardArrowRight","backButton","KeyboardArrowLeft","fetchModules","Promise","resolve","setTimeout","modulesMock","Home","setModules","useEffect","then","components_SwipeableModules","fetchQuestions","questions","lessonsMock","filter","width","overflowY","img","maxWidth","borderRadius","toggleButtonRoot","border","backgroundColor","&:not(:first-child)","borderLeft","&.Mui-selected","borderColor","&.Mui-disabled","toggleButtonGroupRoot","display","flexDirection","QuestionCard","question","IconButton","VolumeUp","CardMedia","alt","image","url","ToggleButtonGroup","exclusive","alternatives","alternative","ToggleButton","value","mobileStepperProgress","defineProperty","breakpoints","down","position","bottom","SwipeableQuestions","components_QuestionCard","progress","Lesson","setQuestions","components_SwipeableQuestions","Routes","react_router","exact","path","App","react_router_dom","CssBaseline","routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7e9e509.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  CardActionArea,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { Star, PlayCircleFilledWhite } from '@material-ui/icons/';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxHeight: 300,\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  description: {\r\n    height: 120,\r\n  },\r\n  star: {\r\n    color: '#112233',\r\n  },\r\n}));\r\n\r\nconst LessonCard = props => {\r\n  const classes = useStyles();\r\n\r\n  const stars = (starsEarned, jsx = []) => {\r\n    if (starsEarned === 0) {\r\n      return jsx;\r\n    } else {\r\n      jsx.push(<Star key={starsEarned} />);\r\n      return stars(starsEarned - 1, jsx);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            direction=\"column\"\r\n            justify=\"space-around\"\r\n            alignItems=\"stretch\"\r\n          >\r\n            <Grid container justify=\"space-between\" alignItems=\"center\" item>\r\n              <Grid item>\r\n                <Typography component=\"h2\" variant=\"h4\">\r\n                  {props.lesson.title}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>{stars(props.lesson.stars)}</Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.description}\r\n                variant=\"body1\"\r\n                component=\"p\"\r\n              >\r\n                {props.lesson.description}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          aria-label=\"Começar\"\r\n          component={Link}\r\n          to={`/lesson/${props.lesson.moduleId}/${props.lesson.lessonId}`}\r\n        >\r\n          Começar\r\n          <PlayCircleFilledWhite className={classes.rightIcon} />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LessonCard;\r\n","const colors = ['#FEC33F', '#DA674F', '#A2D076', '#904A6A', '#E95980'];\r\n\r\nexport default colors;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  MobileStepper,\r\n  Fab,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons/';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport LessonCard from './LessonCard';\r\nimport colors from '../utils/backgroundColors';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minHeight: '100vh',\r\n    paddingBottom: '50px',\r\n  },\r\n  mobileStepperRoot: {\r\n    justifyContent: 'space-around',\r\n    background: 'transparent',\r\n    padding: '20px',\r\n  },\r\n});\r\n\r\nconst SwipeableModules = ({ modules }) => {\r\n  const classes = useStyles();\r\n  const maxSteps = modules.length;\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const handleBack = () => setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n\r\n  const handleNext = () => setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n\r\n  const handleStepChange = step => setActiveStep(step);\r\n\r\n  return (\r\n    <Grid>\r\n      <SwipeableViews\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {modules.map((module, index) => (\r\n          <Card\r\n            square\r\n            style={{ background: colors[index] }}\r\n            className={classes.card}\r\n            key={module.title}\r\n          >\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                spacing={4}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Typography align=\"center\" component=\"h1\" variant=\"h2\">\r\n                    {module.title}\r\n                  </Typography>\r\n                </Grid>\r\n                {module.lessons.map((lesson, index) => (\r\n                  <Grid item md sm={12} xs={12} key={index}>\r\n                    <LessonCard lesson={lesson} />\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </SwipeableViews>\r\n      <MobileStepper\r\n        classes={{ root: classes.mobileStepperRoot }}\r\n        steps={maxSteps}\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Fab\r\n            variant=\"extended\"\r\n            size=\"medium\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n            aria-label=\"Próximo\"\r\n          >\r\n            Próximo\r\n            <KeyboardArrowRight />\r\n          </Fab>\r\n        }\r\n        backButton={\r\n          <Fab\r\n            variant=\"extended\"\r\n            size=\"medium\"\r\n            onClick={handleBack}\r\n            disabled={activeStep === 0}\r\n            aria-label=\"Anterior\"\r\n          >\r\n            <KeyboardArrowLeft />\r\n            Anterior\r\n          </Fab>\r\n        }\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SwipeableModules;\r\n","import modulesMock from '../mocks/userModules.mock.json';\r\n\r\nconst fetchModules = () => {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(modulesMock);\r\n    }, 10);\r\n  });\r\n};\r\n\r\nexport default fetchModules;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SwipeableModules from '../components/SwipeableModules';\r\nimport fetchModules from '../services/modulesService';\r\n\r\nconst Home = () => {\r\n  const [modules, setModules] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchModules().then(modules => setModules(modules));\r\n  }, []);\r\n\r\n  return <SwipeableModules modules={modules} />;\r\n};\r\n\r\nexport default Home;\r\n","import lessonsMock from '../mocks/moduleLessons.mock.json';\r\n\r\nconst fetchQuestions = ({ lessonId, moduleId }) => {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      const module = lessonsMock.filter(module => module.moduleId === moduleId);\r\n\r\n      const questions = module[0].lessons.filter(\r\n        lesson => lesson.lessonId === lessonId\r\n      )[0].questions;\r\n\r\n      resolve(questions);\r\n    }, 10);\r\n  });\r\n};\r\n\r\nexport default fetchQuestions;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { VolumeUp } from '@material-ui/icons';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    overflowY: 'auto',\r\n  },\r\n  img: {\r\n    maxWidth: '400px',\r\n    borderRadius: '10px',\r\n  },\r\n  toggleButtonRoot: {\r\n    color: '#4F4F4F',\r\n    border: '1px solid rgba(0, 0, 0, 0.25)',\r\n    borderRadius: '2px',\r\n    backgroundColor: '#FFFFFF',\r\n    '&:not(:first-child)': {\r\n      borderLeft: '1px solid rgba(0, 0, 0, 0.25)',\r\n      marginLeft: '0',\r\n    },\r\n    '&.Mui-selected': {\r\n      color: '#000000',\r\n      borderColor: 'rgba(0, 0, 0, 0.5)',\r\n    },\r\n    '&.Mui-disabled': {\r\n      color: '#AAAAAA',\r\n      borderColor: 'rgba(0, 0, 0, 0.1)',\r\n    },\r\n  },\r\n  toggleButtonGroupRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around',\r\n    height: '200px',\r\n    width: '350px',\r\n    backgroundColor: 'transparent',\r\n  },\r\n});\r\n\r\nconst QuestionCard = ({ step }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card square className={classes.card}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={4}\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item container spacing={4} justify=\"center\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Typography align=\"center\" component=\"h1\" variant=\"h4\">\r\n                {step.question}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton title=\"Ouvir\" aria-label=\"Escutar\">\r\n                <VolumeUp />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <CardMedia\r\n              className={classes.img}\r\n              component=\"img\"\r\n              alt={step.img.alt}\r\n              image={step.img.url}\r\n              title={step.img.title}\r\n            />\r\n          </Grid>\r\n          <ToggleButtonGroup\r\n            // value={}\r\n            // onChange={}\r\n            classes={{ root: classes.toggleButtonGroupRoot }}\r\n            exclusive\r\n          >\r\n            {step.alternatives.map((alternative, index) => (\r\n              <ToggleButton\r\n                key={index}\r\n                classes={{ root: classes.toggleButtonRoot }}\r\n                value={alternative}\r\n                // disabled={}\r\n              >\r\n                {alternative}\r\n              </ToggleButton>\r\n            ))}\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, MobileStepper, Fab } from '@material-ui/core';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons/';\r\nimport QuestionCard from './QuestionCard';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    minHeight: '100vh',\r\n    paddingBottom: '50px',\r\n  },\r\n  mobileStepperRoot: {\r\n    justifyContent: 'space-around',\r\n    background: 'transparent',\r\n    padding: '20px',\r\n  },\r\n  mobileStepperProgress: {\r\n    width: '35%',\r\n    height: '10px',\r\n    borderRadius: '10px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%',\r\n      height: '4px',\r\n      position: 'absolute',\r\n      bottom: '0px',\r\n      borderRadius: '0px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SwipeableQuestions = ({ questions }) => {\r\n  const classes = useStyles();\r\n  const maxSteps = questions.length;\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const handleBack = () => setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n\r\n  const handleNext = () => setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n\r\n  const handleStepChange = step => setActiveStep(step);\r\n\r\n  return (\r\n    <Grid>\r\n      <SwipeableViews\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {questions.map((question, index) => (\r\n          <QuestionCard step={question} key={index} />\r\n        ))}\r\n      </SwipeableViews>\r\n      <MobileStepper\r\n        variant=\"progress\"\r\n        classes={{\r\n          root: classes.mobileStepperRoot,\r\n          progress: classes.mobileStepperProgress,\r\n        }}\r\n        steps={maxSteps}\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Fab\r\n            variant=\"extended\"\r\n            size=\"medium\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n            aria-label=\"Próximo\"\r\n          >\r\n            Próximo\r\n            <KeyboardArrowRight />\r\n          </Fab>\r\n        }\r\n        backButton={\r\n          <Fab\r\n            variant=\"extended\"\r\n            size=\"medium\"\r\n            onClick={handleBack}\r\n            disabled={activeStep === 0}\r\n            aria-label=\"Anterior\"\r\n          >\r\n            <KeyboardArrowLeft />\r\n            Anterior\r\n          </Fab>\r\n        }\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SwipeableQuestions;\r\n","import React, { useState, useEffect } from 'react';\r\nimport fetchQuestions from '../services/lessonService'\r\nimport SwipeableQuestions from '../components/SwipeableQuestions'\r\n\r\nconst Lesson = () =>{\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchQuestions(questions).then(questions => setQuestions(questions));\r\n  }, [questions]);\r\n\r\n  return <SwipeableQuestions questions={questions} />;\r\n};\r\n\r\nexport default Lesson;","import React from 'react';\r\nimport Home from './pages/Home';\r\nimport Lesson from './pages/Lesson';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/lesson/:moduleId/:lessonId\" component={Lesson} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from './routes';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <CssBaseline />\r\n      <Routes />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}