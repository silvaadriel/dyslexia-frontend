{"version":3,"sources":["actions/answer.js","services/modulesService.js","actions/module.js","services/lessonService.js","actions/lesson.js","actions/score.js","store/index.js","components/LessonCard.js","utils/backgroundColors.js","components/SwipeableModules.js","pages/Home.js","components/MarkCorrectAnswer.js","components/QuestionCard.js","components/Score.js","components/HelpDialog.js","components/SwipeableQuestions.js","components/Loading.js","pages/Lesson.js","routes.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["setIsAnswered","store","isAnswered","setState","setIsVerified","isVerified","setCurrentAnswer","currentAnswer","verifyAnswer","questionIndex","state","questions","rightAnswer","score","console","log","actions","getEarnedStars","answer","Object","toConsumableArray","push","fetchModules","Promise","resolve","setTimeout","modulesMock","fetch","then","modules","fetchQuestions","_ref","lessonId","moduleId","lessonsMock","filter","module","id","parseInt","lessons","lesson","params","isLoading","_store$state","hitPercentage","length","useGlobal","useGlobalHook","React","useStyles","makeStyles","theme","card","maxHeight","rightIcon","marginLeft","spacing","description","height","star","color","LessonCard","props","classes","react_default","a","createElement","Card","className","CardActionArea","CardContent","Grid","container","direction","justify","alignItems","item","Typography","component","variant","title","stars","starsEarned","jsx","arguments","undefined","Star","key","CardActions","Button","size","aria-label","Link","to","concat","PlayCircleFilledWhite","colors","minHeight","paddingBottom","mobileStepperRoot","justifyContent","background","padding","SwipeableModules","maxSteps","_useState","useState","_useState2","slicedToArray","activeStep","setActiveStep","lib_default","index","onChangeIndex","step","enableMouseEvents","map","square","style","xs","align","md","sm","components_LessonCard","MobileStepper","root","steps","nextButton","Fab","onClick","prevActiveStep","disabled","KeyboardArrowRight","backButton","KeyboardArrowLeft","Home","_useGlobal","_useGlobal2","globalState","globalActions","useEffect","components_SwipeableModules","img","maxWidth","borderRadius","toggleButtonRoot","border","backgroundColor","fontWeight","fontSize","textTransform","marginBottom","&:not(:first-child)","borderLeft","&.Mui-selected","borderColor","&.Mui-disabled","toggleButtonGroupRoot","display","flexDirection","width","MarkCorrectAnswer","alternative","setAlternative","Box","question","IconButton","VolumeUp","CardMedia","alt","image","url","ToggleButtonGroup","value","onChange","event","newAlternative","exclusive","alternatives","ToggleButton","overflowY","QuestionCard","components_MarkCorrectAnswer","defineProperty","breakpoints","down","Score","Transition","forwardRef","ref","Slide","assign","HelpDialog","_React$useState","_React$useState2","open","setOpen","handleClickOpen","handleClose","Fragment","Children","children","child","cloneElement","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","helpText","DialogActions","mobileStepperProgress","marginRight","margin","position","bottom","rightFab","&.MuiFab-sizeMedium","boxShadow","leftFab","rightIconMargin","SwipeableQuestions","components_QuestionCard","components_Score","progress","extended","components_HelpDialog","Help","Loading","CircularProgress","Lesson","match","components_Loading","components_SwipeableQuestions","Routes","react_router","exact","path","createMuiTheme","typography","fontFamily","join","responsiveFontSizes","App","react_router_dom","ThemeProvider","CssBaseline","routes","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89ca3633.chunk.js","sourcesContent":["export const setIsAnswered = (store, isAnswered) => {\n  store.setState({ isAnswered });\n};\n\nexport const setIsVerified = (store, isVerified) => {\n  store.setState({ isVerified });\n};\n\nexport const setCurrentAnswer = (store, currentAnswer) => {\n  store.setState({ currentAnswer });\n};\n\nexport const verifyAnswer = (store, questionIndex) => {\n  if (\n    store.state.questions[questionIndex].rightAnswer ===\n    store.state.currentAnswer\n  ) {\n    store.setState({ score: store.state.score + 1 });\n    console.log('correto', store.state.score);\n    console.log(store.actions.score.getEarnedStars(), ' estrelas');\n    store.actions.answer.setIsVerified(true);\n  } else {\n    store.actions.answer.setIsVerified(true);\n    const questions = [...store.state.questions];\n    questions.push(store.state.questions[questionIndex]);\n    store.setState({ questions });\n  }\n};\n","import modulesMock from '../mocks/userModules.mock.json';\r\n\r\nconst fetchModules = () => {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(modulesMock);\r\n    }, 10);\r\n  });\r\n};\r\n\r\nexport default fetchModules;\r\n","import fetch from '../services/modulesService';\n\nexport const fetchModules = store => {\n  fetch().then(modules => store.setState({ modules }));\n};\n","import lessonsMock from '../mocks/moduleLessons.mock.json';\r\n\r\nconst fetchQuestions = ({ lessonId, moduleId }) => {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      const module = lessonsMock.filter(\r\n        module => module.id === parseInt(moduleId)\r\n      );\r\n\r\n      const questions = module[0].lessons.filter(\r\n        lesson => lesson.id === parseInt(lessonId)\r\n      )[0].questions;\r\n\r\n      resolve(questions);\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nexport default fetchQuestions;\r\n","import fetch from '../services/lessonService';\n\nexport const fetchQuestions = (store, params) => {\n  store.setState({ isLoading: true });\n  fetch(params).then(questions => {\n    store.setState({ questions });\n    store.setState({ isLoading: false });\n  });\n};\n","export const getEarnedStars = store => {\n  const { questions, score } = store.state;\n  const hitPercentage = (score * 100) / questions.length;\n\n  console.log(hitPercentage);\n\n  if (hitPercentage === 100) return 3;\n  else if (hitPercentage > 60) return 2;\n  else return 1;\n};\n","import React from 'react';\nimport useGlobalHook from 'use-global-hook';\n\nimport * as actions from '../actions';\n\nconst initialState = {\n  isAnswered: false,\n  isVerified: false,\n  currentAnswer: '',\n  modules: [],\n  questions: [],\n  score: 0,\n  isLoading: true,\n};\n\nconst useGlobal = useGlobalHook(React, initialState, actions);\n\nexport default useGlobal;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  CardActionArea,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { Star, PlayCircleFilledWhite } from '@material-ui/icons/';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxHeight: 300,\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  description: {\r\n    height: 120,\r\n  },\r\n  star: {\r\n    color: '#112233',\r\n  },\r\n}));\r\n\r\nconst LessonCard = props => {\r\n  const classes = useStyles();\r\n\r\n  const stars = (starsEarned, jsx = []) => {\r\n    if (starsEarned === 0) {\r\n      return jsx;\r\n    } else {\r\n      jsx.push(<Star key={starsEarned} />);\r\n      return stars(starsEarned - 1, jsx);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            direction=\"column\"\r\n            justify=\"space-around\"\r\n            alignItems=\"stretch\"\r\n          >\r\n            <Grid container justify=\"space-between\" alignItems=\"center\" item>\r\n              <Grid item>\r\n                <Typography component=\"h2\" variant=\"h4\">\r\n                  {props.lesson.title}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>{stars(props.lesson.stars)}</Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography\r\n                className={classes.description}\r\n                variant=\"body1\"\r\n                component=\"p\"\r\n              >\r\n                {props.lesson.description}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          aria-label=\"Começar\"\r\n          component={Link}\r\n          to={`/dyslexia-frontend/lesson/${props.lesson.moduleId}/${props.lesson.lessonId}`}\r\n        >\r\n          Começar\r\n          <PlayCircleFilledWhite className={classes.rightIcon} />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LessonCard;\r\n","const colors = ['#FEC33F', '#DA674F', '#A2D076', '#904A6A', '#E95980'];\r\n\r\nexport default colors;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  MobileStepper,\r\n  Fab,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons/';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport LessonCard from './LessonCard';\r\nimport colors from '../utils/backgroundColors';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minHeight: '100vh',\r\n    paddingBottom: '50px',\r\n  },\r\n  mobileStepperRoot: {\r\n    justifyContent: 'space-around',\r\n    background: 'transparent',\r\n    padding: '20px',\r\n  },\r\n});\r\n\r\nconst SwipeableModules = ({ modules }) => {\r\n  const classes = useStyles();\r\n  const maxSteps = modules.length;\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const handleBack = () => setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n\r\n  const handleNext = () => setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n\r\n  const handleStepChange = step => setActiveStep(step);\r\n\r\n  return (\r\n    <Grid>\r\n      <SwipeableViews\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {modules.map((module, index) => (\r\n          <Card\r\n            square\r\n            style={{ background: colors[index] }}\r\n            className={classes.card}\r\n            key={module.title}\r\n          >\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                spacing={4}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Typography align=\"center\" component=\"h1\" variant=\"h2\">\r\n                    {module.title}\r\n                  </Typography>\r\n                </Grid>\r\n                {module.lessons.map((lesson, index) => (\r\n                  <Grid item md sm={12} xs={12} key={index}>\r\n                    <LessonCard lesson={lesson} />\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </SwipeableViews>\r\n      <MobileStepper\r\n        classes={{ root: classes.mobileStepperRoot }}\r\n        steps={maxSteps}\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Fab\r\n            variant=\"extended\"\r\n            size=\"medium\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n            aria-label=\"Próximo\"\r\n          >\r\n            Próximo\r\n            <KeyboardArrowRight />\r\n          </Fab>\r\n        }\r\n        backButton={\r\n          <Fab\r\n            variant=\"extended\"\r\n            size=\"medium\"\r\n            onClick={handleBack}\r\n            disabled={activeStep === 0}\r\n            aria-label=\"Anterior\"\r\n          >\r\n            <KeyboardArrowLeft />\r\n            Anterior\r\n          </Fab>\r\n        }\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SwipeableModules;\r\n","import React, { useEffect } from 'react';\r\nimport useGlobal from '../store';\r\nimport SwipeableModules from '../components/SwipeableModules';\r\n\r\nconst Home = () => {\r\n  const [globalState, globalActions] = useGlobal();\r\n\r\n  useEffect(() => {\r\n    globalActions.module.fetchModules();\r\n  }, [globalActions.module]);\r\n\r\n  return <SwipeableModules modules={globalState.modules} />;\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\nimport useGlobal from '../store';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { VolumeUp } from '@material-ui/icons';\nimport {\n  CardMedia,\n  Typography,\n  Grid,\n  IconButton,\n  Box,\n} from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\nconst useStyles = makeStyles({\n  img: {\n    maxWidth: '400px',\n    borderRadius: '10px',\n  },\n  toggleButtonRoot: {\n    color: '#4F4F4F',\n    border: '1px solid rgba(0, 0, 0, 0.25)',\n    borderRadius: '2px',\n    backgroundColor: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: '1.2rem',\n    textTransform: 'none',\n    marginBottom: '10px',\n    '&:not(:first-child)': {\n      borderLeft: '1px solid rgba(0, 0, 0, 0.25)',\n      marginLeft: '0',\n    },\n    '&.Mui-selected': {\n      color: '#000000',\n      borderColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    '&.Mui-disabled': {\n      color: '#AAAAAA',\n      borderColor: 'rgba(0, 0, 0, 0.1)',\n    },\n  },\n  toggleButtonGroupRoot: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    height: '200px',\n    width: '350px',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst MarkCorrectAnswer = ({ step }) => {\n  const classes = useStyles();\n\n  const [globalState, globalActions] = useGlobal();\n  const [alternative, setAlternative] = useState('');\n\n  const handleChange = (event, newAlternative) => {\n    setAlternative(newAlternative);\n\n    if (newAlternative) {\n      globalActions.answer.setIsAnswered(true);\n      globalActions.answer.setCurrentAnswer(newAlternative);\n    } else {\n      globalActions.answer.setIsAnswered(false);\n    }\n  };\n\n  return (\n    <Grid\n      container\n      spacing={4}\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item container spacing={4} justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n            <Box fontWeight=\"700\">{step.question}</Box>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <IconButton title=\"Ouvir\" aria-label=\"Escutar\">\n            <VolumeUp />\n          </IconButton>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <CardMedia\n          className={classes.img}\n          component=\"img\"\n          alt={step.img.alt}\n          image={step.img.url}\n          title={step.img.title}\n        />\n      </Grid>\n      <ToggleButtonGroup\n        value={alternative}\n        onChange={handleChange}\n        classes={{ root: classes.toggleButtonGroupRoot }}\n        exclusive\n      >\n        {step.alternatives.map((alternative, index) => (\n          <ToggleButton\n            key={index}\n            classes={{ root: classes.toggleButtonRoot }}\n            value={alternative}\n            disabled={globalState.isVerified}\n          >\n            {alternative}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </Grid>\n  );\n};\n\nexport default MarkCorrectAnswer;\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport MarkCorrectAnswer from './MarkCorrectAnswer';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    overflowY: 'auto',\r\n  },\r\n});\r\n\r\nconst QuestionCard = ({ step }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card square className={classes.card}>\r\n      <CardContent>\r\n        <MarkCorrectAnswer step={step} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","import React from 'react';\nimport { Card, Typography, Grid, CardContent, Box } from '@material-ui/core';\nimport { Star } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useGlobal from '../store';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: '100vw',\n    height: '100vh',\n    overflowY: 'auto',\n  },\n  stars: {\n    color: '#FFD900',\n    fontSize: '150px',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '100px',\n    },\n  },\n}));\n\nconst Score = props => {\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n\n  const stars = (starsEarned, classes = {}, jsx = []) => {\n    if (starsEarned === 0) {\n      return jsx;\n    } else {\n      jsx.push(<Star classes={{ root: classes }} key={starsEarned} />);\n      return stars(starsEarned - 1, classes, jsx);\n    }\n  };\n\n  return (\n    <Card square className={classes.card}>\n      <CardContent>\n        <Grid\n          container\n          spacing={4}\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Typography align=\"center\" component=\"h1\" variant=\"h4\">\n              <Box fontWeight=\"600\">Lição concluída!</Box>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <div>\n              {stars(globalActions.score.getEarnedStars(), classes.stars)}\n            </div>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Score;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst HelpDialog = props => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderButton = () => {\n    return React.Children.map(props.children, child => {\n      return React.cloneElement(child, {\n        onClick: handleClickOpen,\n      });\n    });\n  };\n\n  return (\n    <>\n      {renderButton()}\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Ajuda</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {props.helpText}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Entendi\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default HelpDialog;\n","import React, { useState } from 'react';\r\nimport useGlobal from '../store';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, MobileStepper, Fab } from '@material-ui/core';\r\nimport { Help, KeyboardArrowRight } from '@material-ui/icons/';\r\nimport QuestionCard from './QuestionCard';\r\nimport Score from './Score';\r\nimport HelpDialog from './HelpDialog';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    minHeight: '100vh',\r\n    paddingBottom: '50px',\r\n  },\r\n  mobileStepperRoot: {\r\n    justifyContent: 'center',\r\n    background: 'transparent',\r\n    padding: '20px',\r\n  },\r\n  mobileStepperProgress: {\r\n    width: '35%',\r\n    height: '10px',\r\n    borderRadius: '10px',\r\n    marginLeft: theme.spacing(10),\r\n    marginRight: theme.spacing(10),\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%',\r\n      height: '4px',\r\n      margin: '0',\r\n      position: 'absolute',\r\n      bottom: '0px',\r\n      borderRadius: '0px',\r\n    },\r\n  },\r\n  rightFab: {\r\n    '&.MuiFab-sizeMedium': {\r\n      boxShadow: 'none',\r\n      width: '125px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '40%',\r\n        borderRadius: '0px 20px 20px 0px',\r\n      },\r\n    },\r\n  },\r\n  leftFab: {\r\n    '&.MuiFab-sizeMedium': {\r\n      boxShadow: 'none',\r\n      width: '125px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '40%',\r\n        borderRadius: '20px 0px 0px 20px',\r\n      },\r\n    },\r\n  },\r\n  rightIconMargin: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SwipeableQuestions = ({ questions }) => {\r\n  const classes = useStyles();\r\n  const maxSteps = questions.length + 1;\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [globalState, globalActions] = useGlobal();\r\n\r\n  const handleNext = () => {\r\n    if (globalState.isVerified) {\r\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n      globalActions.answer.setIsVerified(false);\r\n      globalActions.answer.setIsAnswered(false);\r\n    } else {\r\n      globalActions.answer.verifyAnswer(activeStep);\r\n    }\r\n  };\r\n\r\n  const handleStepChange = step => setActiveStep(step);\r\n\r\n  return (\r\n    <Grid>\r\n      <SwipeableViews\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        disabled\r\n      >\r\n        {questions.map((question, index) => (\r\n          <QuestionCard step={question} key={index} />\r\n        ))}\r\n        <Score />\r\n      </SwipeableViews>\r\n      <MobileStepper\r\n        variant=\"progress\"\r\n        classes={{\r\n          root: classes.mobileStepperRoot,\r\n          progress: classes.mobileStepperProgress,\r\n        }}\r\n        steps={maxSteps}\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Fab\r\n            variant=\"extended\"\r\n            size=\"medium\"\r\n            classes={{ extended: classes.rightFab }}\r\n            onClick={handleNext}\r\n            disabled={!globalState.isAnswered}\r\n            aria-label={globalState.isVerified ? 'Continuar' : 'Verificar'}\r\n          >\r\n            {globalState.isVerified ? 'Continuar' : 'Verificar'}\r\n            <KeyboardArrowRight />\r\n          </Fab>\r\n        }\r\n        backButton={\r\n          <HelpDialog\r\n            helpText={\r\n              activeStep === maxSteps - 1\r\n                ? ''\r\n                : globalState.questions[activeStep].helpText\r\n            }\r\n          >\r\n            <Fab\r\n              variant=\"extended\"\r\n              size=\"medium\"\r\n              classes={{ extended: classes.leftFab }}\r\n              disabled={activeStep === maxSteps - 1}\r\n              aria-label=\"Ajuda\"\r\n            >\r\n              <Help className={classes.rightIconMargin} />\r\n              Ajuda\r\n            </Fab>\r\n          </HelpDialog>\r\n        }\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SwipeableQuestions;\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100vw',\n    height: '100vh',\n    overflowY: 'auto',\n  },\n});\n\nconst Loading = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <CircularProgress />\n    </Grid>\n  );\n};\n\nexport default Loading;\n","import React, { useEffect } from 'react';\r\nimport useGlobal from '../store';\r\nimport SwipeableQuestions from '../components/SwipeableQuestions';\r\nimport Loading from '../components/Loading';\r\n\r\nconst Lesson = props => {\r\n  const [globalState, globalActions] = useGlobal();\r\n\r\n  const { params } = props.match;\r\n\r\n  useEffect(() => {\r\n    globalActions.lesson.fetchQuestions(params);\r\n  }, [globalActions.lesson, params]);\r\n\r\n  return (\r\n    <>\r\n      {globalState.isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <SwipeableQuestions questions={globalState.questions} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lesson;\r\n","import React from 'react';\r\nimport Home from './pages/Home';\r\nimport Lesson from './pages/Lesson';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/dyslexia-frontend/\" component={Home} />\r\n      <Route path=\"/dyslexia-frontend/lesson/:moduleId/:lessonId\" component={Lesson} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['\"M PLUS Rounded 1c\"'].join(','),\n  },\n});\n\nexport default responsiveFontSizes(theme);\n","import React from 'react';\r\nimport Routes from './routes';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport theme from './theme'\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Routes />\r\n      </ThemeProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}